{"remainingRequest":"/Users/lipfer/Downloads/barber/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/lipfer/Downloads/barber/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/lipfer/Downloads/barber/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lipfer/Downloads/barber/src/components/HairsalonsEdit.vue?vue&type=template&id=0da340dc&scoped=true&","dependencies":[{"path":"/Users/lipfer/Downloads/barber/src/components/HairsalonsEdit.vue","mtime":1624476638000},{"path":"/Users/lipfer/Downloads/barber/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lipfer/Downloads/barber/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/lipfer/Downloads/barber/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lipfer/Downloads/barber/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}